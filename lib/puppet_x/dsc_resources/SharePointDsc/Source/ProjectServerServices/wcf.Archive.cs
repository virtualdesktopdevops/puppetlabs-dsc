//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SvcArchive
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServerFault", Namespace="http://Microsoft.Office.Project.Interfaces/")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SvcArchive.DefaultServerFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SvcArchive.ServerExecutionFault))]
    public partial class ServerFault : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string ActorField;
        
        private int LastErrorField;
        
        private string MessageField;
        
        private string SourceField;
        
        private string StackTraceField;
        
        private string TargetSiteField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Actor
        {
            get
            {
                return this.ActorField;
            }
            set
            {
                this.ActorField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LastError
        {
            get
            {
                return this.LastErrorField;
            }
            set
            {
                this.LastErrorField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message
        {
            get
            {
                return this.MessageField;
            }
            set
            {
                this.MessageField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Source
        {
            get
            {
                return this.SourceField;
            }
            set
            {
                this.SourceField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StackTrace
        {
            get
            {
                return this.StackTraceField;
            }
            set
            {
                this.StackTraceField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TargetSite
        {
            get
            {
                return this.TargetSiteField;
            }
            set
            {
                this.TargetSiteField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DefaultServerFault", Namespace="http://Microsoft.Office.Project.Interfaces/")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SvcArchive.ServerExecutionFault))]
    public partial class DefaultServerFault : SvcArchive.ServerFault
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServerExecutionFault", Namespace="http://Microsoft.Office.Project.Interfaces/")]
    public partial class ServerExecutionFault : SvcArchive.DefaultServerFault
    {
        
        private System.Xml.XmlElement ExceptionDetailsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Xml.XmlElement ExceptionDetails
        {
            get
            {
                return this.ExceptionDetailsField;
            }
            set
            {
                this.ExceptionDetailsField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://schemas.microsoft.com/office/project/server/webservices/Archive/", ConfigurationName="SvcArchive.Archive")]
    public interface Archive
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/office/project/server/webservices/Archive/QueueArchi" +
            "veProjects", ReplyAction="http://schemas.microsoft.com/office/project/server/webservices/Archive/QueueArchi" +
            "veProjectsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SvcArchive.ServerExecutionFault), Action="http://schemas.microsoft.com/office/project/server/webservices/Archive/Archive/Qu" +
            "eueArchiveProjectsServerExecutionFaultFault", Name="ServerExecutionFault", Namespace="http://Microsoft.Office.Project.Interfaces/")]
        [System.ServiceModel.FaultContractAttribute(typeof(SvcArchive.DefaultServerFault), Action="http://schemas.microsoft.com/office/project/server/webservices/Archive/Archive/Qu" +
            "eueArchiveProjectsDefaultServerFaultFault", Name="DefaultServerFault", Namespace="http://Microsoft.Office.Project.Interfaces/")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        void QueueArchiveProjects();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/office/project/server/webservices/Archive/QueueArchi" +
            "veProjects", ReplyAction="http://schemas.microsoft.com/office/project/server/webservices/Archive/QueueArchi" +
            "veProjectsResponse")]
        System.Threading.Tasks.Task QueueArchiveProjectsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/office/project/server/webservices/Archive/QueueArchi" +
            "veProject", ReplyAction="http://schemas.microsoft.com/office/project/server/webservices/Archive/QueueArchi" +
            "veProjectResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SvcArchive.DefaultServerFault), Action="http://schemas.microsoft.com/office/project/server/webservices/Archive/Archive/Qu" +
            "eueArchiveProjectDefaultServerFaultFault", Name="DefaultServerFault", Namespace="http://Microsoft.Office.Project.Interfaces/")]
        [System.ServiceModel.FaultContractAttribute(typeof(SvcArchive.ServerExecutionFault), Action="http://schemas.microsoft.com/office/project/server/webservices/Archive/Archive/Qu" +
            "eueArchiveProjectServerExecutionFaultFault", Name="ServerExecutionFault", Namespace="http://Microsoft.Office.Project.Interfaces/")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        System.Guid QueueArchiveProject(System.Guid jobUID, System.Guid projectUID, System.Guid archivedProjectUID, string versionDescription, int retentionPolicy, bool permanentArchive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/office/project/server/webservices/Archive/QueueArchi" +
            "veProject", ReplyAction="http://schemas.microsoft.com/office/project/server/webservices/Archive/QueueArchi" +
            "veProjectResponse")]
        System.Threading.Tasks.Task<System.Guid> QueueArchiveProjectAsync(System.Guid jobUID, System.Guid projectUID, System.Guid archivedProjectUID, string versionDescription, int retentionPolicy, bool permanentArchive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/office/project/server/webservices/Archive/QueueResto" +
            "reProject", ReplyAction="http://schemas.microsoft.com/office/project/server/webservices/Archive/QueueResto" +
            "reProjectResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SvcArchive.ServerExecutionFault), Action="http://schemas.microsoft.com/office/project/server/webservices/Archive/Archive/Qu" +
            "eueRestoreProjectServerExecutionFaultFault", Name="ServerExecutionFault", Namespace="http://Microsoft.Office.Project.Interfaces/")]
        [System.ServiceModel.FaultContractAttribute(typeof(SvcArchive.DefaultServerFault), Action="http://schemas.microsoft.com/office/project/server/webservices/Archive/Archive/Qu" +
            "eueRestoreProjectDefaultServerFaultFault", Name="DefaultServerFault", Namespace="http://Microsoft.Office.Project.Interfaces/")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        void QueueRestoreProject(System.Guid jobUID, System.Guid projectUID, System.Guid versionUID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/office/project/server/webservices/Archive/QueueResto" +
            "reProject", ReplyAction="http://schemas.microsoft.com/office/project/server/webservices/Archive/QueueResto" +
            "reProjectResponse")]
        System.Threading.Tasks.Task QueueRestoreProjectAsync(System.Guid jobUID, System.Guid projectUID, System.Guid versionUID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/office/project/server/webservices/Archive/QueueDelet" +
            "eArchivedProject", ReplyAction="http://schemas.microsoft.com/office/project/server/webservices/Archive/QueueDelet" +
            "eArchivedProjectResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SvcArchive.DefaultServerFault), Action="http://schemas.microsoft.com/office/project/server/webservices/Archive/Archive/Qu" +
            "eueDeleteArchivedProjectDefaultServerFaultFault", Name="DefaultServerFault", Namespace="http://Microsoft.Office.Project.Interfaces/")]
        [System.ServiceModel.FaultContractAttribute(typeof(SvcArchive.ServerExecutionFault), Action="http://schemas.microsoft.com/office/project/server/webservices/Archive/Archive/Qu" +
            "eueDeleteArchivedProjectServerExecutionFaultFault", Name="ServerExecutionFault", Namespace="http://Microsoft.Office.Project.Interfaces/")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        void QueueDeleteArchivedProject(System.Guid jobUID, System.Guid projectUID, System.Guid archiveUID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/office/project/server/webservices/Archive/QueueDelet" +
            "eArchivedProject", ReplyAction="http://schemas.microsoft.com/office/project/server/webservices/Archive/QueueDelet" +
            "eArchivedProjectResponse")]
        System.Threading.Tasks.Task QueueDeleteArchivedProjectAsync(System.Guid jobUID, System.Guid projectUID, System.Guid archiveUID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/office/project/server/webservices/Archive/ReadArchiv" +
            "edProjectsList", ReplyAction="http://schemas.microsoft.com/office/project/server/webservices/Archive/ReadArchiv" +
            "edProjectsListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SvcArchive.ServerExecutionFault), Action="http://schemas.microsoft.com/office/project/server/webservices/Archive/Archive/Re" +
            "adArchivedProjectsListServerExecutionFaultFault", Name="ServerExecutionFault", Namespace="http://Microsoft.Office.Project.Interfaces/")]
        [System.ServiceModel.FaultContractAttribute(typeof(SvcArchive.DefaultServerFault), Action="http://schemas.microsoft.com/office/project/server/webservices/Archive/Archive/Re" +
            "adArchivedProjectsListDefaultServerFaultFault", Name="DefaultServerFault", Namespace="http://Microsoft.Office.Project.Interfaces/")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        SvcArchive.ArchivedProjectsDataSet ReadArchivedProjectsList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/office/project/server/webservices/Archive/ReadArchiv" +
            "edProjectsList", ReplyAction="http://schemas.microsoft.com/office/project/server/webservices/Archive/ReadArchiv" +
            "edProjectsListResponse")]
        System.Threading.Tasks.Task<SvcArchive.ArchivedProjectsDataSet> ReadArchivedProjectsListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/office/project/server/webservices/Archive/ReadProjec" +
            "tArchiveRetentionSetting", ReplyAction="http://schemas.microsoft.com/office/project/server/webservices/Archive/ReadProjec" +
            "tArchiveRetentionSettingResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SvcArchive.ServerExecutionFault), Action="http://schemas.microsoft.com/office/project/server/webservices/Archive/Archive/Re" +
            "adProjectArchiveRetentionSettingServerExecutionFaultFault", Name="ServerExecutionFault", Namespace="http://Microsoft.Office.Project.Interfaces/")]
        [System.ServiceModel.FaultContractAttribute(typeof(SvcArchive.DefaultServerFault), Action="http://schemas.microsoft.com/office/project/server/webservices/Archive/Archive/Re" +
            "adProjectArchiveRetentionSettingDefaultServerFaultFault", Name="DefaultServerFault", Namespace="http://Microsoft.Office.Project.Interfaces/")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        SvcArchive.ProjectArchiveRetentionDataSet ReadProjectArchiveRetentionSetting();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/office/project/server/webservices/Archive/ReadProjec" +
            "tArchiveRetentionSetting", ReplyAction="http://schemas.microsoft.com/office/project/server/webservices/Archive/ReadProjec" +
            "tArchiveRetentionSettingResponse")]
        System.Threading.Tasks.Task<SvcArchive.ProjectArchiveRetentionDataSet> ReadProjectArchiveRetentionSettingAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/office/project/server/webservices/Archive/ReadArchiv" +
            "eSchedule", ReplyAction="http://schemas.microsoft.com/office/project/server/webservices/Archive/ReadArchiv" +
            "eScheduleResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SvcArchive.ServerExecutionFault), Action="http://schemas.microsoft.com/office/project/server/webservices/Archive/Archive/Re" +
            "adArchiveScheduleServerExecutionFaultFault", Name="ServerExecutionFault", Namespace="http://Microsoft.Office.Project.Interfaces/")]
        [System.ServiceModel.FaultContractAttribute(typeof(SvcArchive.DefaultServerFault), Action="http://schemas.microsoft.com/office/project/server/webservices/Archive/Archive/Re" +
            "adArchiveScheduleDefaultServerFaultFault", Name="DefaultServerFault", Namespace="http://Microsoft.Office.Project.Interfaces/")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        SvcArchive.ArchiveScheduleDataSet ReadArchiveSchedule();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/office/project/server/webservices/Archive/ReadArchiv" +
            "eSchedule", ReplyAction="http://schemas.microsoft.com/office/project/server/webservices/Archive/ReadArchiv" +
            "eScheduleResponse")]
        System.Threading.Tasks.Task<SvcArchive.ArchiveScheduleDataSet> ReadArchiveScheduleAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/office/project/server/webservices/Archive/UpdateArch" +
            "iveSchedule", ReplyAction="http://schemas.microsoft.com/office/project/server/webservices/Archive/UpdateArch" +
            "iveScheduleResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SvcArchive.ServerExecutionFault), Action="http://schemas.microsoft.com/office/project/server/webservices/Archive/Archive/Up" +
            "dateArchiveScheduleServerExecutionFaultFault", Name="ServerExecutionFault", Namespace="http://Microsoft.Office.Project.Interfaces/")]
        [System.ServiceModel.FaultContractAttribute(typeof(SvcArchive.DefaultServerFault), Action="http://schemas.microsoft.com/office/project/server/webservices/Archive/Archive/Up" +
            "dateArchiveScheduleDefaultServerFaultFault", Name="DefaultServerFault", Namespace="http://Microsoft.Office.Project.Interfaces/")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        void UpdateArchiveSchedule(SvcArchive.ArchiveScheduleDataSet scheduleDataSet);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/office/project/server/webservices/Archive/UpdateArch" +
            "iveSchedule", ReplyAction="http://schemas.microsoft.com/office/project/server/webservices/Archive/UpdateArch" +
            "iveScheduleResponse")]
        System.Threading.Tasks.Task UpdateArchiveScheduleAsync(SvcArchive.ArchiveScheduleDataSet scheduleDataSet);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/office/project/server/webservices/Archive/QueueArchi" +
            "veResources", ReplyAction="http://schemas.microsoft.com/office/project/server/webservices/Archive/QueueArchi" +
            "veResourcesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SvcArchive.ServerExecutionFault), Action="http://schemas.microsoft.com/office/project/server/webservices/Archive/Archive/Qu" +
            "eueArchiveResourcesServerExecutionFaultFault", Name="ServerExecutionFault", Namespace="http://Microsoft.Office.Project.Interfaces/")]
        [System.ServiceModel.FaultContractAttribute(typeof(SvcArchive.DefaultServerFault), Action="http://schemas.microsoft.com/office/project/server/webservices/Archive/Archive/Qu" +
            "eueArchiveResourcesDefaultServerFaultFault", Name="DefaultServerFault", Namespace="http://Microsoft.Office.Project.Interfaces/")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        void QueueArchiveResources(System.Guid jobUID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/office/project/server/webservices/Archive/QueueArchi" +
            "veResources", ReplyAction="http://schemas.microsoft.com/office/project/server/webservices/Archive/QueueArchi" +
            "veResourcesResponse")]
        System.Threading.Tasks.Task QueueArchiveResourcesAsync(System.Guid jobUID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/office/project/server/webservices/Archive/QueueResto" +
            "reResources", ReplyAction="http://schemas.microsoft.com/office/project/server/webservices/Archive/QueueResto" +
            "reResourcesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SvcArchive.ServerExecutionFault), Action="http://schemas.microsoft.com/office/project/server/webservices/Archive/Archive/Qu" +
            "eueRestoreResourcesServerExecutionFaultFault", Name="ServerExecutionFault", Namespace="http://Microsoft.Office.Project.Interfaces/")]
        [System.ServiceModel.FaultContractAttribute(typeof(SvcArchive.DefaultServerFault), Action="http://schemas.microsoft.com/office/project/server/webservices/Archive/Archive/Qu" +
            "eueRestoreResourcesDefaultServerFaultFault", Name="DefaultServerFault", Namespace="http://Microsoft.Office.Project.Interfaces/")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        void QueueRestoreResources(System.Guid jobUID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/office/project/server/webservices/Archive/QueueResto" +
            "reResources", ReplyAction="http://schemas.microsoft.com/office/project/server/webservices/Archive/QueueResto" +
            "reResourcesResponse")]
        System.Threading.Tasks.Task QueueRestoreResourcesAsync(System.Guid jobUID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/office/project/server/webservices/Archive/QueueArchi" +
            "veCustomFields", ReplyAction="http://schemas.microsoft.com/office/project/server/webservices/Archive/QueueArchi" +
            "veCustomFieldsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SvcArchive.DefaultServerFault), Action="http://schemas.microsoft.com/office/project/server/webservices/Archive/Archive/Qu" +
            "eueArchiveCustomFieldsDefaultServerFaultFault", Name="DefaultServerFault", Namespace="http://Microsoft.Office.Project.Interfaces/")]
        [System.ServiceModel.FaultContractAttribute(typeof(SvcArchive.ServerExecutionFault), Action="http://schemas.microsoft.com/office/project/server/webservices/Archive/Archive/Qu" +
            "eueArchiveCustomFieldsServerExecutionFaultFault", Name="ServerExecutionFault", Namespace="http://Microsoft.Office.Project.Interfaces/")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        void QueueArchiveCustomFields(System.Guid jobUID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/office/project/server/webservices/Archive/QueueArchi" +
            "veCustomFields", ReplyAction="http://schemas.microsoft.com/office/project/server/webservices/Archive/QueueArchi" +
            "veCustomFieldsResponse")]
        System.Threading.Tasks.Task QueueArchiveCustomFieldsAsync(System.Guid jobUID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/office/project/server/webservices/Archive/QueueResto" +
            "reCustomFields", ReplyAction="http://schemas.microsoft.com/office/project/server/webservices/Archive/QueueResto" +
            "reCustomFieldsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SvcArchive.DefaultServerFault), Action="http://schemas.microsoft.com/office/project/server/webservices/Archive/Archive/Qu" +
            "eueRestoreCustomFieldsDefaultServerFaultFault", Name="DefaultServerFault", Namespace="http://Microsoft.Office.Project.Interfaces/")]
        [System.ServiceModel.FaultContractAttribute(typeof(SvcArchive.ServerExecutionFault), Action="http://schemas.microsoft.com/office/project/server/webservices/Archive/Archive/Qu" +
            "eueRestoreCustomFieldsServerExecutionFaultFault", Name="ServerExecutionFault", Namespace="http://Microsoft.Office.Project.Interfaces/")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        void QueueRestoreCustomFields(System.Guid jobUID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/office/project/server/webservices/Archive/QueueResto" +
            "reCustomFields", ReplyAction="http://schemas.microsoft.com/office/project/server/webservices/Archive/QueueResto" +
            "reCustomFieldsResponse")]
        System.Threading.Tasks.Task QueueRestoreCustomFieldsAsync(System.Guid jobUID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/office/project/server/webservices/Archive/QueueArchi" +
            "veSystemSettings", ReplyAction="http://schemas.microsoft.com/office/project/server/webservices/Archive/QueueArchi" +
            "veSystemSettingsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SvcArchive.DefaultServerFault), Action="http://schemas.microsoft.com/office/project/server/webservices/Archive/Archive/Qu" +
            "eueArchiveSystemSettingsDefaultServerFaultFault", Name="DefaultServerFault", Namespace="http://Microsoft.Office.Project.Interfaces/")]
        [System.ServiceModel.FaultContractAttribute(typeof(SvcArchive.ServerExecutionFault), Action="http://schemas.microsoft.com/office/project/server/webservices/Archive/Archive/Qu" +
            "eueArchiveSystemSettingsServerExecutionFaultFault", Name="ServerExecutionFault", Namespace="http://Microsoft.Office.Project.Interfaces/")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        void QueueArchiveSystemSettings(System.Guid jobUID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/office/project/server/webservices/Archive/QueueArchi" +
            "veSystemSettings", ReplyAction="http://schemas.microsoft.com/office/project/server/webservices/Archive/QueueArchi" +
            "veSystemSettingsResponse")]
        System.Threading.Tasks.Task QueueArchiveSystemSettingsAsync(System.Guid jobUID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/office/project/server/webservices/Archive/QueueResto" +
            "reSystemSettings", ReplyAction="http://schemas.microsoft.com/office/project/server/webservices/Archive/QueueResto" +
            "reSystemSettingsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SvcArchive.ServerExecutionFault), Action="http://schemas.microsoft.com/office/project/server/webservices/Archive/Archive/Qu" +
            "eueRestoreSystemSettingsServerExecutionFaultFault", Name="ServerExecutionFault", Namespace="http://Microsoft.Office.Project.Interfaces/")]
        [System.ServiceModel.FaultContractAttribute(typeof(SvcArchive.DefaultServerFault), Action="http://schemas.microsoft.com/office/project/server/webservices/Archive/Archive/Qu" +
            "eueRestoreSystemSettingsDefaultServerFaultFault", Name="DefaultServerFault", Namespace="http://Microsoft.Office.Project.Interfaces/")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        void QueueRestoreSystemSettings(System.Guid jobUID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/office/project/server/webservices/Archive/QueueResto" +
            "reSystemSettings", ReplyAction="http://schemas.microsoft.com/office/project/server/webservices/Archive/QueueResto" +
            "reSystemSettingsResponse")]
        System.Threading.Tasks.Task QueueRestoreSystemSettingsAsync(System.Guid jobUID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/office/project/server/webservices/Archive/QueueArchi" +
            "veCategories", ReplyAction="http://schemas.microsoft.com/office/project/server/webservices/Archive/QueueArchi" +
            "veCategoriesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SvcArchive.DefaultServerFault), Action="http://schemas.microsoft.com/office/project/server/webservices/Archive/Archive/Qu" +
            "eueArchiveCategoriesDefaultServerFaultFault", Name="DefaultServerFault", Namespace="http://Microsoft.Office.Project.Interfaces/")]
        [System.ServiceModel.FaultContractAttribute(typeof(SvcArchive.ServerExecutionFault), Action="http://schemas.microsoft.com/office/project/server/webservices/Archive/Archive/Qu" +
            "eueArchiveCategoriesServerExecutionFaultFault", Name="ServerExecutionFault", Namespace="http://Microsoft.Office.Project.Interfaces/")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        void QueueArchiveCategories(System.Guid jobUID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/office/project/server/webservices/Archive/QueueArchi" +
            "veCategories", ReplyAction="http://schemas.microsoft.com/office/project/server/webservices/Archive/QueueArchi" +
            "veCategoriesResponse")]
        System.Threading.Tasks.Task QueueArchiveCategoriesAsync(System.Guid jobUID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/office/project/server/webservices/Archive/QueueResto" +
            "reCategories", ReplyAction="http://schemas.microsoft.com/office/project/server/webservices/Archive/QueueResto" +
            "reCategoriesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SvcArchive.DefaultServerFault), Action="http://schemas.microsoft.com/office/project/server/webservices/Archive/Archive/Qu" +
            "eueRestoreCategoriesDefaultServerFaultFault", Name="DefaultServerFault", Namespace="http://Microsoft.Office.Project.Interfaces/")]
        [System.ServiceModel.FaultContractAttribute(typeof(SvcArchive.ServerExecutionFault), Action="http://schemas.microsoft.com/office/project/server/webservices/Archive/Archive/Qu" +
            "eueRestoreCategoriesServerExecutionFaultFault", Name="ServerExecutionFault", Namespace="http://Microsoft.Office.Project.Interfaces/")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        void QueueRestoreCategories(System.Guid jobUID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/office/project/server/webservices/Archive/QueueResto" +
            "reCategories", ReplyAction="http://schemas.microsoft.com/office/project/server/webservices/Archive/QueueResto" +
            "reCategoriesResponse")]
        System.Threading.Tasks.Task QueueRestoreCategoriesAsync(System.Guid jobUID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/office/project/server/webservices/Archive/QueueArchi" +
            "veViews", ReplyAction="http://schemas.microsoft.com/office/project/server/webservices/Archive/QueueArchi" +
            "veViewsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SvcArchive.DefaultServerFault), Action="http://schemas.microsoft.com/office/project/server/webservices/Archive/Archive/Qu" +
            "eueArchiveViewsDefaultServerFaultFault", Name="DefaultServerFault", Namespace="http://Microsoft.Office.Project.Interfaces/")]
        [System.ServiceModel.FaultContractAttribute(typeof(SvcArchive.ServerExecutionFault), Action="http://schemas.microsoft.com/office/project/server/webservices/Archive/Archive/Qu" +
            "eueArchiveViewsServerExecutionFaultFault", Name="ServerExecutionFault", Namespace="http://Microsoft.Office.Project.Interfaces/")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        void QueueArchiveViews(System.Guid jobUID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/office/project/server/webservices/Archive/QueueArchi" +
            "veViews", ReplyAction="http://schemas.microsoft.com/office/project/server/webservices/Archive/QueueArchi" +
            "veViewsResponse")]
        System.Threading.Tasks.Task QueueArchiveViewsAsync(System.Guid jobUID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/office/project/server/webservices/Archive/QueueResto" +
            "reViews", ReplyAction="http://schemas.microsoft.com/office/project/server/webservices/Archive/QueueResto" +
            "reViewsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SvcArchive.ServerExecutionFault), Action="http://schemas.microsoft.com/office/project/server/webservices/Archive/Archive/Qu" +
            "eueRestoreViewsServerExecutionFaultFault", Name="ServerExecutionFault", Namespace="http://Microsoft.Office.Project.Interfaces/")]
        [System.ServiceModel.FaultContractAttribute(typeof(SvcArchive.DefaultServerFault), Action="http://schemas.microsoft.com/office/project/server/webservices/Archive/Archive/Qu" +
            "eueRestoreViewsDefaultServerFaultFault", Name="DefaultServerFault", Namespace="http://Microsoft.Office.Project.Interfaces/")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        void QueueRestoreViews(System.Guid jobUID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/office/project/server/webservices/Archive/QueueResto" +
            "reViews", ReplyAction="http://schemas.microsoft.com/office/project/server/webservices/Archive/QueueResto" +
            "reViewsResponse")]
        System.Threading.Tasks.Task QueueRestoreViewsAsync(System.Guid jobUID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/office/project/server/webservices/Archive/QueueArchi" +
            "veGlobalProject", ReplyAction="http://schemas.microsoft.com/office/project/server/webservices/Archive/QueueArchi" +
            "veGlobalProjectResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SvcArchive.ServerExecutionFault), Action="http://schemas.microsoft.com/office/project/server/webservices/Archive/Archive/Qu" +
            "eueArchiveGlobalProjectServerExecutionFaultFault", Name="ServerExecutionFault", Namespace="http://Microsoft.Office.Project.Interfaces/")]
        [System.ServiceModel.FaultContractAttribute(typeof(SvcArchive.DefaultServerFault), Action="http://schemas.microsoft.com/office/project/server/webservices/Archive/Archive/Qu" +
            "eueArchiveGlobalProjectDefaultServerFaultFault", Name="DefaultServerFault", Namespace="http://Microsoft.Office.Project.Interfaces/")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        void QueueArchiveGlobalProject(System.Guid jobUID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/office/project/server/webservices/Archive/QueueArchi" +
            "veGlobalProject", ReplyAction="http://schemas.microsoft.com/office/project/server/webservices/Archive/QueueArchi" +
            "veGlobalProjectResponse")]
        System.Threading.Tasks.Task QueueArchiveGlobalProjectAsync(System.Guid jobUID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/office/project/server/webservices/Archive/QueueResto" +
            "reGlobalProject", ReplyAction="http://schemas.microsoft.com/office/project/server/webservices/Archive/QueueResto" +
            "reGlobalProjectResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SvcArchive.ServerExecutionFault), Action="http://schemas.microsoft.com/office/project/server/webservices/Archive/Archive/Qu" +
            "eueRestoreGlobalProjectServerExecutionFaultFault", Name="ServerExecutionFault", Namespace="http://Microsoft.Office.Project.Interfaces/")]
        [System.ServiceModel.FaultContractAttribute(typeof(SvcArchive.DefaultServerFault), Action="http://schemas.microsoft.com/office/project/server/webservices/Archive/Archive/Qu" +
            "eueRestoreGlobalProjectDefaultServerFaultFault", Name="DefaultServerFault", Namespace="http://Microsoft.Office.Project.Interfaces/")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        void QueueRestoreGlobalProject(System.Guid jobUID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/office/project/server/webservices/Archive/QueueResto" +
            "reGlobalProject", ReplyAction="http://schemas.microsoft.com/office/project/server/webservices/Archive/QueueResto" +
            "reGlobalProjectResponse")]
        System.Threading.Tasks.Task QueueRestoreGlobalProjectAsync(System.Guid jobUID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/office/project/server/webservices/Archive/QueueSched" +
            "uleArchives", ReplyAction="http://schemas.microsoft.com/office/project/server/webservices/Archive/QueueSched" +
            "uleArchivesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SvcArchive.DefaultServerFault), Action="http://schemas.microsoft.com/office/project/server/webservices/Archive/Archive/Qu" +
            "eueScheduleArchivesDefaultServerFaultFault", Name="DefaultServerFault", Namespace="http://Microsoft.Office.Project.Interfaces/")]
        [System.ServiceModel.FaultContractAttribute(typeof(SvcArchive.ServerExecutionFault), Action="http://schemas.microsoft.com/office/project/server/webservices/Archive/Archive/Qu" +
            "eueScheduleArchivesServerExecutionFaultFault", Name="ServerExecutionFault", Namespace="http://Microsoft.Office.Project.Interfaces/")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        void QueueScheduleArchives(SvcArchive.ArchiveOpcode opCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/office/project/server/webservices/Archive/QueueSched" +
            "uleArchives", ReplyAction="http://schemas.microsoft.com/office/project/server/webservices/Archive/QueueSched" +
            "uleArchivesResponse")]
        System.Threading.Tasks.Task QueueScheduleArchivesAsync(SvcArchive.ArchiveOpcode opCode);
    }
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    // This type definition was generated by System.Data.Design.TypedDataSetSchemaImporterExtension schema importer extension.
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("ArchivedProjectsDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.0.30319.17929")]
    public partial class ArchivedProjectsDataSet : global::System.Data.DataSet
    {
        
        private ProjectsDataTable tableProjects;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ArchivedProjectsDataSet()
        {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected ArchivedProjectsDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false)
        {
            if ((this.IsBinarySerialized(info, context) == true))
            {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema))
            {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Projects"] != null))
                {
                    base.Tables.Add(new ProjectsDataTable(ds.Tables["Projects"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else
            {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ProjectsDataTable Projects
        {
            get
            {
                return this.tableProjects;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode
        {
            get
            {
                return this._schemaSerializationMode;
            }
            set
            {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables
        {
            get
            {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations
        {
            get
            {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet()
        {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone()
        {
            ArchivedProjectsDataSet cln = ((ArchivedProjectsDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables()
        {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations()
        {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader)
        {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema))
            {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Projects"] != null))
                {
                    base.Tables.Add(new ProjectsDataTable(ds.Tables["Projects"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else
            {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable()
        {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars()
        {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable)
        {
            this.tableProjects = ((ProjectsDataTable)(base.Tables["Projects"]));
            if ((initTable == true))
            {
                if ((this.tableProjects != null))
                {
                    this.tableProjects.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass()
        {
            this.DataSetName = "ArchivedProjectsDataSet";
            this.Prefix = "";
            this.Namespace = "http://schemas.microsoft.com/office/project/server/webservices/ArchivedProjectsDa" +
                "taSet/";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableProjects = new ProjectsDataTable();
            base.Tables.Add(this.tableProjects);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeProjects()
        {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e)
        {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove))
            {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs)
        {
            ArchivedProjectsDataSet ds = new ArchivedProjectsDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace))
            {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try
                {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); )
                    {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length))
                        {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); )
                            {
                                ;
                            }
                            if ((s1.Position == s1.Length))
                            {
                                return type;
                            }
                        }
                    }
                }
                finally
                {
                    if ((s1 != null))
                    {
                        s1.Close();
                    }
                    if ((s2 != null))
                    {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ProjectsRowChangeEventHandler(object sender, ProjectsRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ProjectsDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable
        {
            
            private global::System.Data.DataColumn columnPROJ_VERSION_UID;
            
            private global::System.Data.DataColumn columnPROJ_UID;
            
            private global::System.Data.DataColumn columnPROJ_NAME;
            
            private global::System.Data.DataColumn columnPROJ_VERSION_DESCRIPTION;
            
            private global::System.Data.DataColumn columnPROJ_VERSION_DATE;
            
            private global::System.Data.DataColumn columnPROJ_VERSION_IS_PERMANENT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProjectsDataTable()
            {
                this.TableName = "Projects";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ProjectsDataTable(global::System.Data.DataTable table)
            {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive))
                {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
                {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace))
                {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ProjectsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context)
            {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PROJ_VERSION_UIDColumn
            {
                get
                {
                    return this.columnPROJ_VERSION_UID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PROJ_UIDColumn
            {
                get
                {
                    return this.columnPROJ_UID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PROJ_NAMEColumn
            {
                get
                {
                    return this.columnPROJ_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PROJ_VERSION_DESCRIPTIONColumn
            {
                get
                {
                    return this.columnPROJ_VERSION_DESCRIPTION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PROJ_VERSION_DATEColumn
            {
                get
                {
                    return this.columnPROJ_VERSION_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PROJ_VERSION_IS_PERMANENTColumn
            {
                get
                {
                    return this.columnPROJ_VERSION_IS_PERMANENT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count
            {
                get
                {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProjectsRow this[int index]
            {
                get
                {
                    return ((ProjectsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ProjectsRowChangeEventHandler ProjectsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ProjectsRowChangeEventHandler ProjectsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ProjectsRowChangeEventHandler ProjectsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ProjectsRowChangeEventHandler ProjectsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddProjectsRow(ProjectsRow row)
            {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProjectsRow AddProjectsRow(System.Guid PROJ_VERSION_UID, System.Guid PROJ_UID, string PROJ_NAME, string PROJ_VERSION_DESCRIPTION, System.DateTime PROJ_VERSION_DATE, bool PROJ_VERSION_IS_PERMANENT)
            {
                ProjectsRow rowProjectsRow = ((ProjectsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        PROJ_VERSION_UID,
                        PROJ_UID,
                        PROJ_NAME,
                        PROJ_VERSION_DESCRIPTION,
                        PROJ_VERSION_DATE,
                        PROJ_VERSION_IS_PERMANENT};
                rowProjectsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowProjectsRow);
                return rowProjectsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProjectsRow FindByPROJ_UID(System.Guid PROJ_UID)
            {
                return ((ProjectsRow)(this.Rows.Find(new object[] {
                            PROJ_UID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator()
            {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone()
            {
                ProjectsDataTable cln = ((ProjectsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance()
            {
                return new ProjectsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars()
            {
                this.columnPROJ_VERSION_UID = base.Columns["PROJ_VERSION_UID"];
                this.columnPROJ_UID = base.Columns["PROJ_UID"];
                this.columnPROJ_NAME = base.Columns["PROJ_NAME"];
                this.columnPROJ_VERSION_DESCRIPTION = base.Columns["PROJ_VERSION_DESCRIPTION"];
                this.columnPROJ_VERSION_DATE = base.Columns["PROJ_VERSION_DATE"];
                this.columnPROJ_VERSION_IS_PERMANENT = base.Columns["PROJ_VERSION_IS_PERMANENT"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass()
            {
                this.columnPROJ_VERSION_UID = new global::System.Data.DataColumn("PROJ_VERSION_UID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPROJ_VERSION_UID);
                this.columnPROJ_UID = new global::System.Data.DataColumn("PROJ_UID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPROJ_UID);
                this.columnPROJ_NAME = new global::System.Data.DataColumn("PROJ_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPROJ_NAME);
                this.columnPROJ_VERSION_DESCRIPTION = new global::System.Data.DataColumn("PROJ_VERSION_DESCRIPTION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPROJ_VERSION_DESCRIPTION);
                this.columnPROJ_VERSION_DATE = new global::System.Data.DataColumn("PROJ_VERSION_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPROJ_VERSION_DATE);
                this.columnPROJ_VERSION_IS_PERMANENT = new global::System.Data.DataColumn("PROJ_VERSION_IS_PERMANENT", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPROJ_VERSION_IS_PERMANENT);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("ArchivedProjectsDataSetKey1", new global::System.Data.DataColumn[] {
                                this.columnPROJ_UID}, true));
                this.columnPROJ_VERSION_UID.AllowDBNull = false;
                this.columnPROJ_UID.AllowDBNull = false;
                this.columnPROJ_UID.Unique = true;
                this.columnPROJ_VERSION_DATE.AllowDBNull = false;
                this.columnPROJ_VERSION_IS_PERMANENT.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProjectsRow NewProjectsRow()
            {
                return ((ProjectsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
            {
                return new ProjectsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType()
            {
                return typeof(ProjectsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if ((this.ProjectsRowChanged != null))
                {
                    this.ProjectsRowChanged(this, new ProjectsRowChangeEvent(((ProjectsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if ((this.ProjectsRowChanging != null))
                {
                    this.ProjectsRowChanging(this, new ProjectsRowChangeEvent(((ProjectsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if ((this.ProjectsRowDeleted != null))
                {
                    this.ProjectsRowDeleted(this, new ProjectsRowChangeEvent(((ProjectsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if ((this.ProjectsRowDeleting != null))
                {
                    this.ProjectsRowDeleting(this, new ProjectsRowChangeEvent(((ProjectsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveProjectsRow(ProjectsRow row)
            {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
            {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ArchivedProjectsDataSet ds = new ArchivedProjectsDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ProjectsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace))
                {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try
                    {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); )
                        {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length))
                            {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); )
                                {
                                    ;
                                }
                                if ((s1.Position == s1.Length))
                                {
                                    return type;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if ((s1 != null))
                        {
                            s1.Close();
                        }
                        if ((s2 != null))
                        {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ProjectsRow : global::System.Data.DataRow
        {
            
            private ProjectsDataTable tableProjects;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ProjectsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb)
            {
                this.tableProjects = ((ProjectsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid PROJ_VERSION_UID
            {
                get
                {
                    return ((global::System.Guid)(this[this.tableProjects.PROJ_VERSION_UIDColumn]));
                }
                set
                {
                    this[this.tableProjects.PROJ_VERSION_UIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid PROJ_UID
            {
                get
                {
                    return ((global::System.Guid)(this[this.tableProjects.PROJ_UIDColumn]));
                }
                set
                {
                    this[this.tableProjects.PROJ_UIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PROJ_NAME
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableProjects.PROJ_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'PROJ_NAME\' in table \'Projects\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableProjects.PROJ_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PROJ_VERSION_DESCRIPTION
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableProjects.PROJ_VERSION_DESCRIPTIONColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'PROJ_VERSION_DESCRIPTION\' in table \'Projects\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableProjects.PROJ_VERSION_DESCRIPTIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime PROJ_VERSION_DATE
            {
                get
                {
                    return ((global::System.DateTime)(this[this.tableProjects.PROJ_VERSION_DATEColumn]));
                }
                set
                {
                    this[this.tableProjects.PROJ_VERSION_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool PROJ_VERSION_IS_PERMANENT
            {
                get
                {
                    return ((bool)(this[this.tableProjects.PROJ_VERSION_IS_PERMANENTColumn]));
                }
                set
                {
                    this[this.tableProjects.PROJ_VERSION_IS_PERMANENTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPROJ_NAMENull()
            {
                return this.IsNull(this.tableProjects.PROJ_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPROJ_NAMENull()
            {
                this[this.tableProjects.PROJ_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPROJ_VERSION_DESCRIPTIONNull()
            {
                return this.IsNull(this.tableProjects.PROJ_VERSION_DESCRIPTIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPROJ_VERSION_DESCRIPTIONNull()
            {
                this[this.tableProjects.PROJ_VERSION_DESCRIPTIONColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ProjectsRowChangeEvent : global::System.EventArgs
        {
            
            private ProjectsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProjectsRowChangeEvent(ProjectsRow row, global::System.Data.DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProjectsRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }
        }
    }
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    // This type definition was generated by System.Data.Design.TypedDataSetSchemaImporterExtension schema importer extension.
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("ProjectArchiveRetentionDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.0.30319.17929")]
    public partial class ProjectArchiveRetentionDataSet : global::System.Data.DataSet
    {
        
        private ProjectsDataTable tableProjects;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ProjectArchiveRetentionDataSet()
        {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected ProjectArchiveRetentionDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false)
        {
            if ((this.IsBinarySerialized(info, context) == true))
            {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema))
            {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Projects"] != null))
                {
                    base.Tables.Add(new ProjectsDataTable(ds.Tables["Projects"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else
            {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ProjectsDataTable Projects
        {
            get
            {
                return this.tableProjects;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode
        {
            get
            {
                return this._schemaSerializationMode;
            }
            set
            {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables
        {
            get
            {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations
        {
            get
            {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet()
        {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone()
        {
            ProjectArchiveRetentionDataSet cln = ((ProjectArchiveRetentionDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables()
        {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations()
        {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader)
        {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema))
            {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Projects"] != null))
                {
                    base.Tables.Add(new ProjectsDataTable(ds.Tables["Projects"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else
            {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable()
        {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars()
        {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable)
        {
            this.tableProjects = ((ProjectsDataTable)(base.Tables["Projects"]));
            if ((initTable == true))
            {
                if ((this.tableProjects != null))
                {
                    this.tableProjects.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass()
        {
            this.DataSetName = "ProjectArchiveRetentionDataSet";
            this.Prefix = "";
            this.Namespace = "http://schemas.microsoft.com/office/project/server/webservices/ProjectArchiveRete" +
                "ntionDataSet/";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableProjects = new ProjectsDataTable();
            base.Tables.Add(this.tableProjects);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeProjects()
        {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e)
        {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove))
            {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs)
        {
            ProjectArchiveRetentionDataSet ds = new ProjectArchiveRetentionDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace))
            {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try
                {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); )
                    {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length))
                        {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); )
                            {
                                ;
                            }
                            if ((s1.Position == s1.Length))
                            {
                                return type;
                            }
                        }
                    }
                }
                finally
                {
                    if ((s1 != null))
                    {
                        s1.Close();
                    }
                    if ((s2 != null))
                    {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ProjectsRowChangeEventHandler(object sender, ProjectsRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ProjectsDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable
        {
            
            private global::System.Data.DataColumn columnPROJ_UID;
            
            private global::System.Data.DataColumn columnPROJ_ARCHIVE_RETENTION;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProjectsDataTable()
            {
                this.TableName = "Projects";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ProjectsDataTable(global::System.Data.DataTable table)
            {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive))
                {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
                {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace))
                {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ProjectsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context)
            {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PROJ_UIDColumn
            {
                get
                {
                    return this.columnPROJ_UID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PROJ_ARCHIVE_RETENTIONColumn
            {
                get
                {
                    return this.columnPROJ_ARCHIVE_RETENTION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count
            {
                get
                {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProjectsRow this[int index]
            {
                get
                {
                    return ((ProjectsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ProjectsRowChangeEventHandler ProjectsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ProjectsRowChangeEventHandler ProjectsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ProjectsRowChangeEventHandler ProjectsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ProjectsRowChangeEventHandler ProjectsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddProjectsRow(ProjectsRow row)
            {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProjectsRow AddProjectsRow(System.Guid PROJ_UID, int PROJ_ARCHIVE_RETENTION)
            {
                ProjectsRow rowProjectsRow = ((ProjectsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        PROJ_UID,
                        PROJ_ARCHIVE_RETENTION};
                rowProjectsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowProjectsRow);
                return rowProjectsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProjectsRow FindByPROJ_UID(System.Guid PROJ_UID)
            {
                return ((ProjectsRow)(this.Rows.Find(new object[] {
                            PROJ_UID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator()
            {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone()
            {
                ProjectsDataTable cln = ((ProjectsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance()
            {
                return new ProjectsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars()
            {
                this.columnPROJ_UID = base.Columns["PROJ_UID"];
                this.columnPROJ_ARCHIVE_RETENTION = base.Columns["PROJ_ARCHIVE_RETENTION"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass()
            {
                this.columnPROJ_UID = new global::System.Data.DataColumn("PROJ_UID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPROJ_UID);
                this.columnPROJ_ARCHIVE_RETENTION = new global::System.Data.DataColumn("PROJ_ARCHIVE_RETENTION", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPROJ_ARCHIVE_RETENTION);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("ProjectArchiveRetentionDataSetKey1", new global::System.Data.DataColumn[] {
                                this.columnPROJ_UID}, true));
                this.columnPROJ_UID.AllowDBNull = false;
                this.columnPROJ_UID.Unique = true;
                this.columnPROJ_ARCHIVE_RETENTION.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProjectsRow NewProjectsRow()
            {
                return ((ProjectsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
            {
                return new ProjectsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType()
            {
                return typeof(ProjectsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if ((this.ProjectsRowChanged != null))
                {
                    this.ProjectsRowChanged(this, new ProjectsRowChangeEvent(((ProjectsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if ((this.ProjectsRowChanging != null))
                {
                    this.ProjectsRowChanging(this, new ProjectsRowChangeEvent(((ProjectsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if ((this.ProjectsRowDeleted != null))
                {
                    this.ProjectsRowDeleted(this, new ProjectsRowChangeEvent(((ProjectsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if ((this.ProjectsRowDeleting != null))
                {
                    this.ProjectsRowDeleting(this, new ProjectsRowChangeEvent(((ProjectsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveProjectsRow(ProjectsRow row)
            {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
            {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ProjectArchiveRetentionDataSet ds = new ProjectArchiveRetentionDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ProjectsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace))
                {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try
                    {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); )
                        {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length))
                            {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); )
                                {
                                    ;
                                }
                                if ((s1.Position == s1.Length))
                                {
                                    return type;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if ((s1 != null))
                        {
                            s1.Close();
                        }
                        if ((s2 != null))
                        {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ProjectsRow : global::System.Data.DataRow
        {
            
            private ProjectsDataTable tableProjects;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ProjectsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb)
            {
                this.tableProjects = ((ProjectsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid PROJ_UID
            {
                get
                {
                    return ((global::System.Guid)(this[this.tableProjects.PROJ_UIDColumn]));
                }
                set
                {
                    this[this.tableProjects.PROJ_UIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int PROJ_ARCHIVE_RETENTION
            {
                get
                {
                    return ((int)(this[this.tableProjects.PROJ_ARCHIVE_RETENTIONColumn]));
                }
                set
                {
                    this[this.tableProjects.PROJ_ARCHIVE_RETENTIONColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ProjectsRowChangeEvent : global::System.EventArgs
        {
            
            private ProjectsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProjectsRowChangeEvent(ProjectsRow row, global::System.Data.DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProjectsRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }
        }
    }
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    // This type definition was generated by System.Data.Design.TypedDataSetSchemaImporterExtension schema importer extension.
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("ArchiveScheduleDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.0.30319.17929")]
    public partial class ArchiveScheduleDataSet : global::System.Data.DataSet
    {
        
        private ArchiveScheduleDataTable tableArchiveSchedule;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ArchiveScheduleDataSet()
        {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected ArchiveScheduleDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false)
        {
            if ((this.IsBinarySerialized(info, context) == true))
            {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema))
            {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["ArchiveSchedule"] != null))
                {
                    base.Tables.Add(new ArchiveScheduleDataTable(ds.Tables["ArchiveSchedule"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else
            {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ArchiveScheduleDataTable ArchiveSchedule
        {
            get
            {
                return this.tableArchiveSchedule;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode
        {
            get
            {
                return this._schemaSerializationMode;
            }
            set
            {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables
        {
            get
            {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations
        {
            get
            {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet()
        {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone()
        {
            ArchiveScheduleDataSet cln = ((ArchiveScheduleDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables()
        {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations()
        {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader)
        {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema))
            {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["ArchiveSchedule"] != null))
                {
                    base.Tables.Add(new ArchiveScheduleDataTable(ds.Tables["ArchiveSchedule"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else
            {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable()
        {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars()
        {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable)
        {
            this.tableArchiveSchedule = ((ArchiveScheduleDataTable)(base.Tables["ArchiveSchedule"]));
            if ((initTable == true))
            {
                if ((this.tableArchiveSchedule != null))
                {
                    this.tableArchiveSchedule.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass()
        {
            this.DataSetName = "ArchiveScheduleDataSet";
            this.Prefix = "";
            this.Namespace = "http://schemas.microsoft.com/office/project/server/webservices/ArchiveScheduleDat" +
                "aSet/";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableArchiveSchedule = new ArchiveScheduleDataTable();
            base.Tables.Add(this.tableArchiveSchedule);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeArchiveSchedule()
        {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e)
        {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove))
            {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs)
        {
            ArchiveScheduleDataSet ds = new ArchiveScheduleDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace))
            {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try
                {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); )
                    {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length))
                        {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); )
                            {
                                ;
                            }
                            if ((s1.Position == s1.Length))
                            {
                                return type;
                            }
                        }
                    }
                }
                finally
                {
                    if ((s1 != null))
                    {
                        s1.Close();
                    }
                    if ((s2 != null))
                    {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ArchiveScheduleRowChangeEventHandler(object sender, ArchiveScheduleRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ArchiveScheduleDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable
        {
            
            private global::System.Data.DataColumn columnWADMIN_PROJECTS;
            
            private global::System.Data.DataColumn columnWADMIN_ENTERPRISE_RESOURCE_POOL;
            
            private global::System.Data.DataColumn columnWADMIN_ENTERPRISE_CUSTOM_FIELDS;
            
            private global::System.Data.DataColumn columnWADMIN_ENTERPRISE_GLOBAL;
            
            private global::System.Data.DataColumn columnWADMIN_SYSTEM_SETTINGS;
            
            private global::System.Data.DataColumn columnWADMIN_CATEGORY_GROUP;
            
            private global::System.Data.DataColumn columnWADMIN_VIEW_DEFINITIONS;
            
            private global::System.Data.DataColumn columnWADMIN_ARCHIVE_RETENTION;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ArchiveScheduleDataTable()
            {
                this.TableName = "ArchiveSchedule";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ArchiveScheduleDataTable(global::System.Data.DataTable table)
            {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive))
                {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
                {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace))
                {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ArchiveScheduleDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context)
            {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WADMIN_PROJECTSColumn
            {
                get
                {
                    return this.columnWADMIN_PROJECTS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WADMIN_ENTERPRISE_RESOURCE_POOLColumn
            {
                get
                {
                    return this.columnWADMIN_ENTERPRISE_RESOURCE_POOL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WADMIN_ENTERPRISE_CUSTOM_FIELDSColumn
            {
                get
                {
                    return this.columnWADMIN_ENTERPRISE_CUSTOM_FIELDS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WADMIN_ENTERPRISE_GLOBALColumn
            {
                get
                {
                    return this.columnWADMIN_ENTERPRISE_GLOBAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WADMIN_SYSTEM_SETTINGSColumn
            {
                get
                {
                    return this.columnWADMIN_SYSTEM_SETTINGS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WADMIN_CATEGORY_GROUPColumn
            {
                get
                {
                    return this.columnWADMIN_CATEGORY_GROUP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WADMIN_VIEW_DEFINITIONSColumn
            {
                get
                {
                    return this.columnWADMIN_VIEW_DEFINITIONS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WADMIN_ARCHIVE_RETENTIONColumn
            {
                get
                {
                    return this.columnWADMIN_ARCHIVE_RETENTION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count
            {
                get
                {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ArchiveScheduleRow this[int index]
            {
                get
                {
                    return ((ArchiveScheduleRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ArchiveScheduleRowChangeEventHandler ArchiveScheduleRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ArchiveScheduleRowChangeEventHandler ArchiveScheduleRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ArchiveScheduleRowChangeEventHandler ArchiveScheduleRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ArchiveScheduleRowChangeEventHandler ArchiveScheduleRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddArchiveScheduleRow(ArchiveScheduleRow row)
            {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ArchiveScheduleRow AddArchiveScheduleRow(long WADMIN_PROJECTS, long WADMIN_ENTERPRISE_RESOURCE_POOL, long WADMIN_ENTERPRISE_CUSTOM_FIELDS, long WADMIN_ENTERPRISE_GLOBAL, long WADMIN_SYSTEM_SETTINGS, long WADMIN_CATEGORY_GROUP, long WADMIN_VIEW_DEFINITIONS, long WADMIN_ARCHIVE_RETENTION)
            {
                ArchiveScheduleRow rowArchiveScheduleRow = ((ArchiveScheduleRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        WADMIN_PROJECTS,
                        WADMIN_ENTERPRISE_RESOURCE_POOL,
                        WADMIN_ENTERPRISE_CUSTOM_FIELDS,
                        WADMIN_ENTERPRISE_GLOBAL,
                        WADMIN_SYSTEM_SETTINGS,
                        WADMIN_CATEGORY_GROUP,
                        WADMIN_VIEW_DEFINITIONS,
                        WADMIN_ARCHIVE_RETENTION};
                rowArchiveScheduleRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowArchiveScheduleRow);
                return rowArchiveScheduleRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator()
            {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone()
            {
                ArchiveScheduleDataTable cln = ((ArchiveScheduleDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance()
            {
                return new ArchiveScheduleDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars()
            {
                this.columnWADMIN_PROJECTS = base.Columns["WADMIN_PROJECTS"];
                this.columnWADMIN_ENTERPRISE_RESOURCE_POOL = base.Columns["WADMIN_ENTERPRISE_RESOURCE_POOL"];
                this.columnWADMIN_ENTERPRISE_CUSTOM_FIELDS = base.Columns["WADMIN_ENTERPRISE_CUSTOM_FIELDS"];
                this.columnWADMIN_ENTERPRISE_GLOBAL = base.Columns["WADMIN_ENTERPRISE_GLOBAL"];
                this.columnWADMIN_SYSTEM_SETTINGS = base.Columns["WADMIN_SYSTEM_SETTINGS"];
                this.columnWADMIN_CATEGORY_GROUP = base.Columns["WADMIN_CATEGORY_GROUP"];
                this.columnWADMIN_VIEW_DEFINITIONS = base.Columns["WADMIN_VIEW_DEFINITIONS"];
                this.columnWADMIN_ARCHIVE_RETENTION = base.Columns["WADMIN_ARCHIVE_RETENTION"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass()
            {
                this.columnWADMIN_PROJECTS = new global::System.Data.DataColumn("WADMIN_PROJECTS", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWADMIN_PROJECTS);
                this.columnWADMIN_ENTERPRISE_RESOURCE_POOL = new global::System.Data.DataColumn("WADMIN_ENTERPRISE_RESOURCE_POOL", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWADMIN_ENTERPRISE_RESOURCE_POOL);
                this.columnWADMIN_ENTERPRISE_CUSTOM_FIELDS = new global::System.Data.DataColumn("WADMIN_ENTERPRISE_CUSTOM_FIELDS", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWADMIN_ENTERPRISE_CUSTOM_FIELDS);
                this.columnWADMIN_ENTERPRISE_GLOBAL = new global::System.Data.DataColumn("WADMIN_ENTERPRISE_GLOBAL", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWADMIN_ENTERPRISE_GLOBAL);
                this.columnWADMIN_SYSTEM_SETTINGS = new global::System.Data.DataColumn("WADMIN_SYSTEM_SETTINGS", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWADMIN_SYSTEM_SETTINGS);
                this.columnWADMIN_CATEGORY_GROUP = new global::System.Data.DataColumn("WADMIN_CATEGORY_GROUP", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWADMIN_CATEGORY_GROUP);
                this.columnWADMIN_VIEW_DEFINITIONS = new global::System.Data.DataColumn("WADMIN_VIEW_DEFINITIONS", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWADMIN_VIEW_DEFINITIONS);
                this.columnWADMIN_ARCHIVE_RETENTION = new global::System.Data.DataColumn("WADMIN_ARCHIVE_RETENTION", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWADMIN_ARCHIVE_RETENTION);
                this.columnWADMIN_PROJECTS.AllowDBNull = false;
                this.columnWADMIN_PROJECTS.DefaultValue = ((long)(0));
                this.columnWADMIN_ENTERPRISE_RESOURCE_POOL.AllowDBNull = false;
                this.columnWADMIN_ENTERPRISE_RESOURCE_POOL.DefaultValue = ((long)(0));
                this.columnWADMIN_ENTERPRISE_CUSTOM_FIELDS.AllowDBNull = false;
                this.columnWADMIN_ENTERPRISE_CUSTOM_FIELDS.DefaultValue = ((long)(0));
                this.columnWADMIN_ENTERPRISE_GLOBAL.AllowDBNull = false;
                this.columnWADMIN_ENTERPRISE_GLOBAL.DefaultValue = ((long)(0));
                this.columnWADMIN_SYSTEM_SETTINGS.AllowDBNull = false;
                this.columnWADMIN_SYSTEM_SETTINGS.DefaultValue = ((long)(0));
                this.columnWADMIN_CATEGORY_GROUP.AllowDBNull = false;
                this.columnWADMIN_CATEGORY_GROUP.DefaultValue = ((long)(0));
                this.columnWADMIN_VIEW_DEFINITIONS.AllowDBNull = false;
                this.columnWADMIN_VIEW_DEFINITIONS.DefaultValue = ((long)(0));
                this.columnWADMIN_ARCHIVE_RETENTION.AllowDBNull = false;
                this.columnWADMIN_ARCHIVE_RETENTION.DefaultValue = ((long)(0));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ArchiveScheduleRow NewArchiveScheduleRow()
            {
                return ((ArchiveScheduleRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
            {
                return new ArchiveScheduleRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType()
            {
                return typeof(ArchiveScheduleRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if ((this.ArchiveScheduleRowChanged != null))
                {
                    this.ArchiveScheduleRowChanged(this, new ArchiveScheduleRowChangeEvent(((ArchiveScheduleRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if ((this.ArchiveScheduleRowChanging != null))
                {
                    this.ArchiveScheduleRowChanging(this, new ArchiveScheduleRowChangeEvent(((ArchiveScheduleRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if ((this.ArchiveScheduleRowDeleted != null))
                {
                    this.ArchiveScheduleRowDeleted(this, new ArchiveScheduleRowChangeEvent(((ArchiveScheduleRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if ((this.ArchiveScheduleRowDeleting != null))
                {
                    this.ArchiveScheduleRowDeleting(this, new ArchiveScheduleRowChangeEvent(((ArchiveScheduleRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveArchiveScheduleRow(ArchiveScheduleRow row)
            {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
            {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ArchiveScheduleDataSet ds = new ArchiveScheduleDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ArchiveScheduleDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace))
                {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try
                    {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); )
                        {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length))
                            {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); )
                                {
                                    ;
                                }
                                if ((s1.Position == s1.Length))
                                {
                                    return type;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if ((s1 != null))
                        {
                            s1.Close();
                        }
                        if ((s2 != null))
                        {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ArchiveScheduleRow : global::System.Data.DataRow
        {
            
            private ArchiveScheduleDataTable tableArchiveSchedule;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ArchiveScheduleRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb)
            {
                this.tableArchiveSchedule = ((ArchiveScheduleDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long WADMIN_PROJECTS
            {
                get
                {
                    return ((long)(this[this.tableArchiveSchedule.WADMIN_PROJECTSColumn]));
                }
                set
                {
                    this[this.tableArchiveSchedule.WADMIN_PROJECTSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long WADMIN_ENTERPRISE_RESOURCE_POOL
            {
                get
                {
                    return ((long)(this[this.tableArchiveSchedule.WADMIN_ENTERPRISE_RESOURCE_POOLColumn]));
                }
                set
                {
                    this[this.tableArchiveSchedule.WADMIN_ENTERPRISE_RESOURCE_POOLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long WADMIN_ENTERPRISE_CUSTOM_FIELDS
            {
                get
                {
                    return ((long)(this[this.tableArchiveSchedule.WADMIN_ENTERPRISE_CUSTOM_FIELDSColumn]));
                }
                set
                {
                    this[this.tableArchiveSchedule.WADMIN_ENTERPRISE_CUSTOM_FIELDSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long WADMIN_ENTERPRISE_GLOBAL
            {
                get
                {
                    return ((long)(this[this.tableArchiveSchedule.WADMIN_ENTERPRISE_GLOBALColumn]));
                }
                set
                {
                    this[this.tableArchiveSchedule.WADMIN_ENTERPRISE_GLOBALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long WADMIN_SYSTEM_SETTINGS
            {
                get
                {
                    return ((long)(this[this.tableArchiveSchedule.WADMIN_SYSTEM_SETTINGSColumn]));
                }
                set
                {
                    this[this.tableArchiveSchedule.WADMIN_SYSTEM_SETTINGSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long WADMIN_CATEGORY_GROUP
            {
                get
                {
                    return ((long)(this[this.tableArchiveSchedule.WADMIN_CATEGORY_GROUPColumn]));
                }
                set
                {
                    this[this.tableArchiveSchedule.WADMIN_CATEGORY_GROUPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long WADMIN_VIEW_DEFINITIONS
            {
                get
                {
                    return ((long)(this[this.tableArchiveSchedule.WADMIN_VIEW_DEFINITIONSColumn]));
                }
                set
                {
                    this[this.tableArchiveSchedule.WADMIN_VIEW_DEFINITIONSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long WADMIN_ARCHIVE_RETENTION
            {
                get
                {
                    return ((long)(this[this.tableArchiveSchedule.WADMIN_ARCHIVE_RETENTIONColumn]));
                }
                set
                {
                    this[this.tableArchiveSchedule.WADMIN_ARCHIVE_RETENTIONColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ArchiveScheduleRowChangeEvent : global::System.EventArgs
        {
            
            private ArchiveScheduleRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ArchiveScheduleRowChangeEvent(ArchiveScheduleRow row, global::System.Data.DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ArchiveScheduleRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/office/project/server/webservices/Archive/")]
    public enum ArchiveOpcode
    {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        Projects,
        
        /// <remarks/>
        Resources,
        
        /// <remarks/>
        CustomFields,
        
        /// <remarks/>
        EnterpriseGlobal,
        
        /// <remarks/>
        SystemSettings,
        
        /// <remarks/>
        Categories,
        
        /// <remarks/>
        ViewDefinitions,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ArchiveChannel : SvcArchive.Archive, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ArchiveClient : System.ServiceModel.ClientBase<SvcArchive.Archive>, SvcArchive.Archive
    {
        
        public ArchiveClient()
        {
        }
        
        public ArchiveClient(string endpointConfigurationName) : 
                base(endpointConfigurationName)
        {
        }
        
        public ArchiveClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress)
        {
        }
        
        public ArchiveClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress)
        {
        }
        
        public ArchiveClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public void QueueArchiveProjects()
        {
            base.Channel.QueueArchiveProjects();
        }
        
        public System.Threading.Tasks.Task QueueArchiveProjectsAsync()
        {
            return base.Channel.QueueArchiveProjectsAsync();
        }
        
        public System.Guid QueueArchiveProject(System.Guid jobUID, System.Guid projectUID, System.Guid archivedProjectUID, string versionDescription, int retentionPolicy, bool permanentArchive)
        {
            return base.Channel.QueueArchiveProject(jobUID, projectUID, archivedProjectUID, versionDescription, retentionPolicy, permanentArchive);
        }
        
        public System.Threading.Tasks.Task<System.Guid> QueueArchiveProjectAsync(System.Guid jobUID, System.Guid projectUID, System.Guid archivedProjectUID, string versionDescription, int retentionPolicy, bool permanentArchive)
        {
            return base.Channel.QueueArchiveProjectAsync(jobUID, projectUID, archivedProjectUID, versionDescription, retentionPolicy, permanentArchive);
        }
        
        public void QueueRestoreProject(System.Guid jobUID, System.Guid projectUID, System.Guid versionUID)
        {
            base.Channel.QueueRestoreProject(jobUID, projectUID, versionUID);
        }
        
        public System.Threading.Tasks.Task QueueRestoreProjectAsync(System.Guid jobUID, System.Guid projectUID, System.Guid versionUID)
        {
            return base.Channel.QueueRestoreProjectAsync(jobUID, projectUID, versionUID);
        }
        
        public void QueueDeleteArchivedProject(System.Guid jobUID, System.Guid projectUID, System.Guid archiveUID)
        {
            base.Channel.QueueDeleteArchivedProject(jobUID, projectUID, archiveUID);
        }
        
        public System.Threading.Tasks.Task QueueDeleteArchivedProjectAsync(System.Guid jobUID, System.Guid projectUID, System.Guid archiveUID)
        {
            return base.Channel.QueueDeleteArchivedProjectAsync(jobUID, projectUID, archiveUID);
        }
        
        public SvcArchive.ArchivedProjectsDataSet ReadArchivedProjectsList()
        {
            return base.Channel.ReadArchivedProjectsList();
        }
        
        public System.Threading.Tasks.Task<SvcArchive.ArchivedProjectsDataSet> ReadArchivedProjectsListAsync()
        {
            return base.Channel.ReadArchivedProjectsListAsync();
        }
        
        public SvcArchive.ProjectArchiveRetentionDataSet ReadProjectArchiveRetentionSetting()
        {
            return base.Channel.ReadProjectArchiveRetentionSetting();
        }
        
        public System.Threading.Tasks.Task<SvcArchive.ProjectArchiveRetentionDataSet> ReadProjectArchiveRetentionSettingAsync()
        {
            return base.Channel.ReadProjectArchiveRetentionSettingAsync();
        }
        
        public SvcArchive.ArchiveScheduleDataSet ReadArchiveSchedule()
        {
            return base.Channel.ReadArchiveSchedule();
        }
        
        public System.Threading.Tasks.Task<SvcArchive.ArchiveScheduleDataSet> ReadArchiveScheduleAsync()
        {
            return base.Channel.ReadArchiveScheduleAsync();
        }
        
        public void UpdateArchiveSchedule(SvcArchive.ArchiveScheduleDataSet scheduleDataSet)
        {
            base.Channel.UpdateArchiveSchedule(scheduleDataSet);
        }
        
        public System.Threading.Tasks.Task UpdateArchiveScheduleAsync(SvcArchive.ArchiveScheduleDataSet scheduleDataSet)
        {
            return base.Channel.UpdateArchiveScheduleAsync(scheduleDataSet);
        }
        
        public void QueueArchiveResources(System.Guid jobUID)
        {
            base.Channel.QueueArchiveResources(jobUID);
        }
        
        public System.Threading.Tasks.Task QueueArchiveResourcesAsync(System.Guid jobUID)
        {
            return base.Channel.QueueArchiveResourcesAsync(jobUID);
        }
        
        public void QueueRestoreResources(System.Guid jobUID)
        {
            base.Channel.QueueRestoreResources(jobUID);
        }
        
        public System.Threading.Tasks.Task QueueRestoreResourcesAsync(System.Guid jobUID)
        {
            return base.Channel.QueueRestoreResourcesAsync(jobUID);
        }
        
        public void QueueArchiveCustomFields(System.Guid jobUID)
        {
            base.Channel.QueueArchiveCustomFields(jobUID);
        }
        
        public System.Threading.Tasks.Task QueueArchiveCustomFieldsAsync(System.Guid jobUID)
        {
            return base.Channel.QueueArchiveCustomFieldsAsync(jobUID);
        }
        
        public void QueueRestoreCustomFields(System.Guid jobUID)
        {
            base.Channel.QueueRestoreCustomFields(jobUID);
        }
        
        public System.Threading.Tasks.Task QueueRestoreCustomFieldsAsync(System.Guid jobUID)
        {
            return base.Channel.QueueRestoreCustomFieldsAsync(jobUID);
        }
        
        public void QueueArchiveSystemSettings(System.Guid jobUID)
        {
            base.Channel.QueueArchiveSystemSettings(jobUID);
        }
        
        public System.Threading.Tasks.Task QueueArchiveSystemSettingsAsync(System.Guid jobUID)
        {
            return base.Channel.QueueArchiveSystemSettingsAsync(jobUID);
        }
        
        public void QueueRestoreSystemSettings(System.Guid jobUID)
        {
            base.Channel.QueueRestoreSystemSettings(jobUID);
        }
        
        public System.Threading.Tasks.Task QueueRestoreSystemSettingsAsync(System.Guid jobUID)
        {
            return base.Channel.QueueRestoreSystemSettingsAsync(jobUID);
        }
        
        public void QueueArchiveCategories(System.Guid jobUID)
        {
            base.Channel.QueueArchiveCategories(jobUID);
        }
        
        public System.Threading.Tasks.Task QueueArchiveCategoriesAsync(System.Guid jobUID)
        {
            return base.Channel.QueueArchiveCategoriesAsync(jobUID);
        }
        
        public void QueueRestoreCategories(System.Guid jobUID)
        {
            base.Channel.QueueRestoreCategories(jobUID);
        }
        
        public System.Threading.Tasks.Task QueueRestoreCategoriesAsync(System.Guid jobUID)
        {
            return base.Channel.QueueRestoreCategoriesAsync(jobUID);
        }
        
        public void QueueArchiveViews(System.Guid jobUID)
        {
            base.Channel.QueueArchiveViews(jobUID);
        }
        
        public System.Threading.Tasks.Task QueueArchiveViewsAsync(System.Guid jobUID)
        {
            return base.Channel.QueueArchiveViewsAsync(jobUID);
        }
        
        public void QueueRestoreViews(System.Guid jobUID)
        {
            base.Channel.QueueRestoreViews(jobUID);
        }
        
        public System.Threading.Tasks.Task QueueRestoreViewsAsync(System.Guid jobUID)
        {
            return base.Channel.QueueRestoreViewsAsync(jobUID);
        }
        
        public void QueueArchiveGlobalProject(System.Guid jobUID)
        {
            base.Channel.QueueArchiveGlobalProject(jobUID);
        }
        
        public System.Threading.Tasks.Task QueueArchiveGlobalProjectAsync(System.Guid jobUID)
        {
            return base.Channel.QueueArchiveGlobalProjectAsync(jobUID);
        }
        
        public void QueueRestoreGlobalProject(System.Guid jobUID)
        {
            base.Channel.QueueRestoreGlobalProject(jobUID);
        }
        
        public System.Threading.Tasks.Task QueueRestoreGlobalProjectAsync(System.Guid jobUID)
        {
            return base.Channel.QueueRestoreGlobalProjectAsync(jobUID);
        }
        
        public void QueueScheduleArchives(SvcArchive.ArchiveOpcode opCode)
        {
            base.Channel.QueueScheduleArchives(opCode);
        }
        
        public System.Threading.Tasks.Task QueueScheduleArchivesAsync(SvcArchive.ArchiveOpcode opCode)
        {
            return base.Channel.QueueScheduleArchivesAsync(opCode);
        }
    }
}
